# Source: https://docs.microsoft.com/en-us/exchange/plan-and-deploy/deploy-new-installations/create-azure-test-environments?view=exchserver-2019
https://docs.microsoft.com/en-us/exchange/plan-and-deploy/deploy-new-installations/unattended-installs?view=exchserver-2019
https://docs.microsoft.com/en-us/exchange/plan-and-deploy/post-installation-tasks/post-installation-tasks?view=exchserver-2019


# EX2019: DC: 2012 R2 / 2016 / 2019
# AD Forest 2012 R2 ++
# Install on AD is not recommended
# page file: 25% of mem
# 30 GB free space needed; 200 MB on C:; 500 MB for msg queue
# only on W2019!; can be win Core
# Office Client: O365, O2019/2016/2013, 
# on Win7 KB3140245 Reg Keys are neede to enalbe TLS 1.1 u. 1.2
- basis and common starting point 
- demonstrate Exchange
- develop Exchange Server application
- internal email and applicaton testing

1x AD domain controller
1x Exch server
cannot use Azure Active Directory Domain Services
Exchange in Azure
User Poweshell or Azure Powershell

1, SEt up virtual network 
2, set up AD DC (DC1)
3, set up Exchange  (EX1)
4, Configure Exchange

# $Variables=" "
# $AZSubscrN=" "
# $AZLocN=" "
# $AZResGrpN=" "
# $AZStorAccN=" "

# $vmDc1N="<DNS name to test>"
# $vmDC1DnsN="<DNS name to test>"
# $vmDc1N="Dc1"
# $vmDCSize="Standard_v2"

# $vmEx1N="<DNS name to test>"
# $vmEx1DnsN=" "
# $vmEx1N="Ex1"
# $vmExSize="StandardD_v2"
# $vmEx1NicN=$vmEx1N + "-Nic"
# $vmEx1PIpN=$vmEXName + "-PublicIP"
# $vmEx2N="<DNS name to test>"
# $vmEx2DnsN=" "
# $vmEx2N="Ex2"

# AzUsr=AzureUser
# AZPwd=Pass.W0rd
# Logon to Azure

#Connect-AzAccount
#Get Subscriptions
Get-AZSubscription 
# Set Subcription Name
$subscrName="<subscription name>"
Get-AzSubscription -SubscriptionName "MSDN/Prof/Ent" | Set-AZContext
# Set subscription by Name
Set-AzContext -SubscriptionName $subscrName
# List Subscription
Get-AZContext


#$RgName="<resource group name>"
$RgName="Rg01Mail"
#$LocName="<location name, such as West US>"
$LocName="westeurope"
New-AZResourceGroup -Name $RgName -Location $locName
# Get-AZResourcegroup

# Storage Account
#Get-AZStorageAccount | Sort StorageAccountName | Select StorageAccountName
#
# Get-AZStorageAccountNameAvailability "<proposed name>"
#

#$StorAccName="<storage account name>"
#$locName=(Get-AZResourceGroup -Name $rgName).Location
#New-AZStorageAccount -Name $saName -ResourceGroupName $rgName -Type Standard_LRS -Location $locName

#

#$RgName="<name of your new resource group>"
$Vn01N = "VN01-Mail"
$Vn01AddrPref="192.168.0.0/16"
$Vn01Sub01N="Vn01Sub01-Mail"
$Vn01Sub01AddrPref="192.168.0.0/16"
$Vn01Sub01Gw="192.168.0.1"
$Vn01Sub01NsgN="Vn01Sub01NSG-Mail"
$Vn01DnsSrvrList="8.8.4.4,8.8.8.8"

$Vn01Sub01Obj  = New-AzVirtualNetworkSubnetConfig -Name $Vn01Sub01N -AddressPrefix $Vn01Sub01AddrPref
#$Vn01DMZ      = New-AzVirtualNetworkSubnetConfig -Name DMZSubnet -AddressPrefix "192.168.0.0/24" -NatGatewayID="192.168.0.1"
#$Vn01FrontSn  = New-AzVirtualNetworkSubnetConfig -Name FrontEndSubnet -AddressPrefix "192.168.1.0/24" -NatGatewayID="192.168.1.1"
#$Vn01BackSn   = New-AzVirtualNetworkSubnetConfig -Name BackEndSubnet  -AddressPrefix "192.168.2.0/24" -NatGatewayID="192.168.2.1"
#$Vn01ClientSn = New-AzVirtualNetworkSubnetConfig -Name ClientSubnet  -AddressPrefix "192.168.3.0/24" -NatGatewayID="192.168.3.1"
#$ExSubnet     = New-AZVirtualNetworkSubnetConfig -Name $VnSub01Name -AddressPrefix $vn01AddrPref

$rule143  = New-AZNetworkSecurityRuleConfig -Name "CP-IMAP143" -Description "Allow IN IMAP" -Access Allow -Protocol Tcp -Direction Inbound -Priority 100 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 143
$rule20   = New-AZNetworkSecurityRuleConfig -Name "CP-SSH22" -Description "Allow IN SSH" -Access Allow -Protocol Tcp -Direction Inbound -Priority 101 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 20-21
$rule22   = New-AZNetworkSecurityRuleConfig -Name "CP-SSH22" -Description "Allow IN SSH" -Access Allow -Protocol Tcp -Direction Inbound -Priority 102 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 20-21
$rule25   = New-AZNetworkSecurityRuleConfig -Name "CP-SMTP25" -Description "Allow IN SMTP" -Access Allow -Protocol Tcp -Direction Inbound -Priority 103 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 22
$rule25   = New-AZNetworkSecurityRuleConfig -Name "CP-SMTP25" -Description "Allow IN SMTP" -Access Allow -Protocol Tcp -Direction Inbound -Priority 104 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 25
$rule80   = New-AZNetworkSecurityRuleConfig -Name "CP-HTTP80" -Description "Allow IN HTTP" -Access Allow -Protocol Tcp -Direction Inbound -Priority 105 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 80
$rule3389 = New-AZNetworkSecurityRuleConfig -Name "CP-RDP3389" -Description "Allow IN RDP" -Access Allow -Protocol Tcp -Direction Inbound -Priority 106 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 3389
$rule4118 = New-AZNetworkSecurityRuleConfig -Name "CP-DS4118" -Description "Allow IN DS Agents" -Access Allow -Protocol Tcp -Direction Inbound -Priority 107 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 4118
$rule443  = New-AZNetworkSecurityRuleConfig -Name "CP-HTTPS443" -Description "Allow IN HTTPS" -Access Allow -Protocol Tcp -Direction Inbound -Priority 108 -SourceAddressPrefix Internet -SourcePortRange * -DestinationAddressPrefix * -DestinationPortRange 443

$Vn01NsgObj = New-AZNetworkSecurityGroup -Name $Vn01NsgN -ResourceGroupName $RgName -Location $LocName -SecurityRules $rule443, $rule3389,$rule4118
#$Vn01NsgObj = Get-AZNetworkSecurityGroup -Name $Vn01NsgN 

$Vn01Sub01Obj = New-AzVirtualNetworkSubnetConfig -Name $VN01Sub01N -AddressPrefix $Vn01Sub01AddrPref
#$Vn01Sub01Obj = Get-AzVirtualNetworkSubnetConfig -Name $Vn01Sub01N -VirtualNetwork $Vn01Obj

$Vn01Obj = New-AzVirtualNetwork -Name $Vn01N -ResourceGroupName $RgName -Location $LocName -AddressPrefix $Vn01AddrPref -Subnet $Vn01Sub01Obj
# $Vn01Obj = Get-AZVirtualNetwork -Name $Vn01
# New-AzVirtualNetwork -Name $Vn01N -ResourceGroupName $RgName -Location $LocName -AddressPrefix $Vn01AddrPref -Subnet $Vn01FrontSn,$Vn01BackSn
# New-AZVirtualNetwork -Name $Vn01N -ResourceGroupName $RgName -Location $LocName -AddressPrefix $Vn01AddrPref -Subnet $exSubnet


$DcSrvrName="DC1"
$DCSrvrPrivIP="192.168.1.10"
$DcVmSize = "Standard_A1_v2"
$DcPublisherName ="MicrosoftWindowsServer"
$DcVmOffer = "WindowsServer"
$DcVmSku ="2012-R2-Datacenter"
$DcVmOsVer ="latest"

$DCAvailSetN="DcAvailabilitySet"
$DcVmPubNic="DcVmPubNic"
$DcVmNicN="DcVmNic"
$DcVmIpConfN = "DcVmIp1Conf"
$DcVmIpConfObj = New-AzNetworkInterfaceIpConfig -Name $DcVmIp1ConfN -Subnet $Vn01Sub01Obj -PrivateIpAddress $DCSrvrPrivIP -Primary

$ExchSrvrName1="EX1"
$ExchSrvrPrivIp1="192.168.1.20"
$ExchSrvrName2="EX2"
$ExchSrvrPrivIP2="192.168.1.25"

# Get-AzVM
# Get-AzVM -ResourceGroupName $RgNam
# Get-AzVM -ResourceGroupName $RgName -Name $DcSrvrName -Status

# Create AD Controller
# Create an availability set for domain controller virtual machines
# $VmAvSetObj = New-AZAvailabilitySet -ResourceGroupName $RgName -Name $DcAvailSetN -Location $LocName -Sku Aligned  -PlatformUpdateDomainCount 5 -PlatformFaultDomainCount 2
# Create the domain controller virtual machine
$VmPIpObj = New-AZPublicIpAddress -Name $DcVmPubNic -ResourceGroupName $RgName -Location $LocName -AllocationMethod Dynamic
$VmNicObj = New-AZNetworkInterface -Name $DcVmNicN -ResourceGroupName $RgName -Location $LocName -SubnetId $Vn01Obj.Subnets[0].Id -PublicIpAddressId $VmPIpObj.Id -IpConfiguration $DcVmIpConfObj


#$VmAvSetObj = Get-AZAvailabilitySet -Name  $DcAvailSetN -ResourceGroupName $RgName
$VmObj = New-AZVMConfig -VMName $DcSrvrName -VMSize $DcVmSize 
# -AvailabilitySetId $VmAvSetObj.Id
# $VmObj = Set-AZVMOSDisk -VM $VmObj -Name DcVmOs -DiskSizeInGB 64 -CreateOption FromImage -StorageAccountType "Standard_LRS"
# $VmDdiskConfig = New-AZDiskConfig -AccountType "Standard_LRS" -Location $LocName -CreateOption Empty -DiskSizeGB 20
# $VmDataDisk1 = New-AZDisk -DiskName DcVmDataDisk1 -Disk $diskConfig -ResourceGroupName $rgName
# $VmObj = Add-AZVMDataDisk -VM $VmObj -Name DcVmDataDisk1 -CreateOption Attach -ManagedDiskId $dataDisk1.Id -Lun 1
# $VmCredObj = Get-Credential -Message "Type the name and password of the local administrator account for Dc1 Vm."
$SecPwdObj = ConvertTo-SecureString 'Pass.wOrd' -AsPlainText -Force
$VmCredObj = New-Object System.Management.Automation.PSCredential ("AzureUser", $SecPwdObj)


# ? -EnableProvisionVMAgent -Enable AutoUpdate
$VmObj = Set-AZVMOperatingSystem -VM $VmObj -Windows -ComputerName $DcSrvrName -Credential $VmCredObj -ProvisionVMAgent -EnableAutoUpdate
$VmObj = Set-AZVMSourceImage -VM $VmObj -PublisherName $DcPublisherName  -Offer $DcVmOffer -Skus $DcVmSku -Version $DcVmOsVer
$VmObj = Add-AZVMNetworkInterface -VM $VmObj -Id $VmNicObj.Id
New-AZVM -ResourceGroupName $RgName -Location $LocName -VM $VmObj


$VirtualMachine = Set-AzVMOperatingSystem -VM $VirtualMachine -Windows -ComputerName MyServerVM -ProvisionVMAgent -EnableAutoUpdate
$VirtualMachine = Add-AzVMNetworkInterface -VM $VirtualMachine -Id $NIC.Id
$VirtualMachine = Set-AzVMSourceImage -VM $VirtualMachine -PublisherName $DcPublisherName  -Offer 'WindowsServer' -Skus '2012-R2-Datacenter' -Version latest
New-AzVM -ResourceGroupName $RgName -Location $Location -VM $VirtualMachine -Verbose


# disks
$disk=Get-Disk | where {$_.PartitionStyle -eq "RAW"}
$diskNumber=$disk.Number
Initialize-Disk -Number $diskNumber
New-Partition -DiskNumber $diskNumber -UseMaximumSize -AssignDriveLetter
Format-Volume -DriveLetter F


Add-WindowsFeature RSAT-ADDS-Tools
Install-WindowsFeature AD-Domain-Services -IncludeManagementTools
Install-ADDSForest -DomainName corp.contoso.com -DatabasePath "F:\NTDS" -SysvolPath "F:\SYSVOL" -LogPath "F:\Logs"


New-AzVm `
    -ResourceGroupName $RgName `
    -Name "SqlVm" `
	  -ImageName "MicrosoftSQLServer:SQL2016SP1-WS2016:Enterprise:latest" `
    -Location $LocName `
    -VirtualNetworkName $vNetName `
    -SubnetName "mySQLSubnet" `
    -SecurityGroupName "myNetworkSecurityGroup" `
    -PublicIpAddressName "mySQLPublicIpAddress" `
    -OpenPorts 3389,1401 


# restart DC1

# Set up key variables
$subscrName="<name of your Azure subscription>"
$rgName="<your resource group name>"
$vmDNSName="<unique, public DNS name for the Exchange server>"
# Set the Azure subscription
Select-AzSubscription -SubscriptionName $subscrName
# Get the Azure location and storage account names
$locName=(Get-AZResourceGroup -Name $rgName).Location
$saName=(Get-AZStorageaccount | Where {$_.ResourceGroupName -eq $rgName}).StorageAccountName
# Create an availability set for Exchange virtual machines
New-AZAvailabilitySet -ResourceGroupName $rgName -Name exAvailabilitySet -Location $locName -Sku Aligned  -PlatformUpdateDomainCount 5 -PlatformFaultDomainCount 2
# Specify the virtual machine name and size
$vmName="exVM"
$vmSize="Standard_D3_v2"
$vnet=Get-AZVirtualNetwork -Name "EXSrvrVnet" -ResourceGroupName $rgName
$avSet=Get-AZAvailabilitySet -Name exAvailabilitySet -ResourceGroupName $rgName
$vm=New-AZVMConfig -VMName $vmName -VMSize $vmSize -AvailabilitySetId $avSet.Id
# Create the NIC for the virtual machine
$nicName=$vmName + "-NIC"
$pipName=$vmName + "-PublicIP"
$pip=New-AZPublicIpAddress -Name $pipName -ResourceGroupName $rgName -DomainNameLabel $vmDNSName -Location $locName -AllocationMethod Dynamic
$nic=New-AZNetworkInterface -Name $nicName -ResourceGroupName $rgName -Location $locName -SubnetId $vnet.Subnets[0].Id -PublicIpAddressId $pip.Id -PrivateIpAddress "10.0.0.5"
# Create and configure the virtual machine
$cred=Get-Credential -Message "Type the name and password of the local administrator account for exVM."
$vm=Set-AZVMOSDisk -VM $vm -Name ($vmName +"-OS") -DiskSizeInGB 128 -CreateOption FromImage -StorageAccountType "Standard_LRS"
$vm=Set-AZVMOperatingSystem -VM $vm -Windows -ComputerName $vmName -Credential $cred -ProvisionVMAgent -EnableAutoUpdate
$vm=Set-AZVMSourceImage -VM $vm -PublisherName MicrosoftWindowsServer -Offer $DcVmOffer -Skus 2019-Datacenter -Version "latest"
$vm=Add-AZVMNetworkInterface -VM $vm -Id $nic.Id
New-AZVM -ResourceGroupName $rgName -Location $locName -VM $vm

# 
Add-Computer -DomainName "corp.contoso.com"
Restart-Computer

# get internet DNS name
Write-Host (Get-AZPublicIpaddress -Name "exVM-PublicIP" -ResourceGroup $rgName).DnsSettings.Fqdn
# Domians and trust - add this name to Alternative UPN suffixes

# install Exch
Install-WindowsFeature NET-Framework-45-Features, RPC-over-HTTP-proxy, RSAT-Clustering, RSAT-Clustering-CmdInterface, RSAT-Clustering-Mgmt, RSAT-Clustering-PowerShell, Web-Mgmt-Console, WAS-Process-Model, Web-Asp-Net45, Web-Basic-Auth, Web-Client-Auth, Web-Digest-Auth, Web-Dir-Browsing, Web-Dyn-Compression, Web-Http-Errors, Web-Http-Logging, Web-Http-Redirect, Web-Http-Tracing, Web-ISAPI-Ext, Web-ISAPI-Filter, Web-Lgcy-Mgmt-Console, Web-Metabase, Web-Mgmt-Console, Web-Mgmt-Service, Web-Net-Ext45, Web-Request-Monitor, Web-Server, Web-Stat-Compression, Web-Static-Content, Web-Windows-Auth, Web-WMI, Windows-Identity-Foundation, RSAT-ADDS-Tools
Restart-Computer

# Click IE Sec Configuration / IE Enhanced SEc Conf / Off
Install Unifed Communicaton Manage API 4.0 Runtime from:
https://www.microsoft.com/download/details.aspx?id=34992
# run command
# download latest Exchange: 
https://docs.microsoft.com/en-us/exchange/new-features/build-numbers-and-release-dates?view=exchserver-2019&wt.mc_id=MVP
2016U13:
https://download.microsoft.com/download/f/4/e/f4e4b3a0-925b-4eff-8cc7-8b5932d75b49/ExchangeServer2016-x64-cu14.iso
# mount iso file to local

# /Roles: or /r:
# Role: MT: Mailbox, ET for Edge Transport, MT or T for Mangement Tools
e:
.\setup.exe /mode:Install /role:Mailbox,ManagementTools /OrganizationName:TMMR-E2016 /IacceptExchangeServerLicenseTerms /PrepareAD /PrepareSchema / PrepareDomain: /TargetDir:"C:\Exchange Server"

Restart-Computer

# add Mailboxes
$dnsName="<Internet DNS name of the exVM virtual machine>"
$user1Name="chris@" + $dnsName
$user2Name="janet@" + $dnsName
$db=Get-MailboxDatabase
$dbName=$db.Name
$password = Read-Host "Enter password" -AsSecureString
# record passwoard and create mailboxes
New-Mailbox -UserPrincipalName $user1Name -Alias chris -Database $dbName -Name ChrisAshton -OrganizationalUnit Users -Password $password -FirstName Chris -LastName Ashton -DisplayName "Chris Ashton"

# test email delivery between mailboxes
# Browser: https://<internetname EX1>/owa
# New / To / user-Search Dir/Subject / Type message / Send




New-Mailbox -UserPrincipalName $user2Name -Alias janet -Database $dbName -Name JanetSchorr -OrganizationalUnit Users -Password $password -FirstName Janet -LastName Schorr -DisplayName "Janet Schorr"

# Stop VMSize
$rgName="<your resource group name>"
Stop-AZVM -Name ExVM -ResourceGroupName $rgName -Force
Stop-AZVM -Name DcVM -ResourceGroupName $rgName -Force

# Start Vms
$rgName="<your resource group name>"
Start-AZVM -Name DcVM -ResourceGroupName $rgName
Start-AZVM -Name ExVM -ResourceGroupName $rgName

Get-AzVMImagePublisher -Location "EastUS"
Get-AzVMImageOffer `
   -Location $locName `
   -PublisherName "MicrosoftWindowsServer"
  Get-AzVMImageSku `
   -Location $locName `
   -PublisherName "MicrosoftWindowsServer" `
   -Offer "WindowsServer"

Get-AzVM `
    -ResourceGroupName "myResourceGroupVM" `
    -Name "myVM" `
    -Status | Select @{n="Status"; e={$_.Statuses[1].Code}}
    
Stop-AzVM `
   -ResourceGroupName "myResourceGroupVM" `
   -Name "myVM" -Force
Set-AzVMExtension -ResourceGroupName "myResourceGroupAutomate" `
    -ExtensionName "IIS" `
    -VMName "myVM" `
    -Location "EastUS" `
    -Publisher Microsoft.Compute `
    -ExtensionType CustomScriptExtension `
    -TypeHandlerVersion 1.8 `
    -SettingString '{"commandToExecute":"powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"}'
    
# Remove Resource Group
# Get-AzureRmResourceGroup -Name $RgName | Remove-AzureRmResourceGroup -Verbose -Force 


%windir%\system32\sysprep\sysprep.exe
mstsc /v:publicIpAddress
Install-WindowsFeature -name Web-Server -IncludeManagementTools

Get-Disk | Where partitionstyle -eq 'raw' |
    Initialize-Disk -PartitionStyle MBR -PassThru |
    New-Partition -AssignDriveLetter -UseMaximumSize |
    Format-Volume -FileSystem NTFS -NewFileSystemLabel "myDataDisk" -Confirm:$false

